<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9vgAAAAASUVORK5CYII=
</value>
  </data>
</root>